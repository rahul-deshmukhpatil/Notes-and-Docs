worked in C++/Python

# c#
	#study and knowlege
	gone through msdn documention for langauge refernce, keywords and concetps,
	compilers and compiler options and code optimizations
	Tried to understand at philosophical level
	
	# contribution
	numerous video series about also .NET enviorment and c#
	contributed to community via stackoverflow, msdn documentation

	# implementation
	implemented the pricing for the equity and currency arb, sectorial quant trading


#Motivation for the change
	Analogy of the sea of trading opportunities
	passionate, want to move away from small fish netting to systematic big whale spear fish hunting

	HFT is more about small trades due to pricing errors or delays and opportunistic trading,
	but now would like to do more of generating systematic alpha with creative ideas over opportunistic trading

	more of a trading technology developer and not pure HFT/C++ developer. So my motivation for developing technology
	is changed from HFT to systematic trading. I am in the right field but on the different path than I want to be on now

	Overall I am looking for team which develops the tech for wide array of financial products and company which has
	innovative trading ideas rather than executing same obvious idea over million times.
	
	My current job involves high portion of speed calculations and optimization coding along with simple mathematics,
	I want to atleast work with company where mathematical component is bit more.

	And in nutshell, I think HFT is much more about when to buy/sell and what price to what to buy and sell at what what price

# What are you looking for
	interesting and challanging problems to solve
	critic as well as supportive team, whose opinions on my work could increase my thinking dimension
	Systematic trading technology work

# wahat did you liked about role
	Developing in both python and C#
	Implementing and using the backtesting engine for Managers
	Scanning tools, Data visualization tools and other analytical operations

# Why me
	implemented backtesting engine
	c# project in short time
	Knwoledge of the trading systems critical working, robustness and stability expected
	Options MM, FX working with different exchanges and vendors

#Strong points
	ability to convert verbal problem into software porject design and in the programming langauage
	while reverse capability to explain system/programming problem in english for business managers and traders
	
	I am self learner and good at reading code and creating good design understanding of existing projects

#Strong Weak strong point
	Can we multitasking with the context switches but not too much of parallel working. I can very well plan out multiple tasks 
	to complete in optimal ways. Can divide the multiple tasks in small chunks

#Questions
	Wanted to know breifly about interesting or challanging problems you are solving now or in the queue for future development
		Speed optimization
		feature set of the quant trading platform

	Do you already have trading engine which could execute big orders are TVWAP or VWAP or you use external bank platforms for it
	do you use any RFQ platform for the OTC trades

	Do you use all features of the .Net platform i.e Entity Frameworks, .Net notebooks
	Do you used .Net core (since its release in 2014 before founding of RCM) or .Net framework
	Do .NET langauge and .NET eco systems features do you use heavily and have you extended BCL for any purpose?
	Do you use any open source python libs or C# packages for quant or infra work or to optimize speed

	Sytem stability: One thing I am sure that you test code heavily, but what kind of special steps do you take for 
			no functionality break,
			system is robust and no runtime crash
			and regression of new features

	Do you use python code calling from C# or you have publish/service mechanism in kafka or any other messaning queue for backtesting?

	Do you have matrix to decide how fast backtesting should be done or do you employ any tiered backtesting like first random data, then actual 1 min, then variety of stocks and then stocks in particular sector? do you have inbuilt constructs which could run this tiered back testing. Do you maintain database of timeframe during which unforseen volatality has been seen and how your strategies performd during them.

	Any particular framework for the data visualization
